/**
 * Auto-generated TypeScript types for environment variables
 * Generated from: .env
 * Generated at: 2025-07-20T14:11:38.600Z
 *
 * DO NOT EDIT THIS FILE MANUALLY
 * Run generateTypes() to regenerate when .env changes
 */
export interface EnvConfig {
  /** Type: NUMBER */
  AGE: number;
  /** Type: STRING */
  NAME: string;
  /** Type: BOOL */
  IS_OLD_ENOUGH: boolean;
  /** Type: ARRAY */
  EXPERIENCE: any[];
  /** Type: OBJ */
  EXTRA: Record<string, any>;
}
export declare const envSchema: {
  readonly AGE: 'NUMBER';
  readonly NAME: 'STRING';
  readonly IS_OLD_ENOUGH: 'BOOL';
  readonly EXPERIENCE: 'ARRAY';
  readonly EXTRA: 'OBJ';
};
export type EnvKey = keyof EnvConfig;
export type EnvType = 'NUMBER' | 'STRING' | 'BOOL' | 'ARRAY' | 'OBJ';
export declare const envKeys: EnvKey[];
export declare function isEnvKey(key: string): key is EnvKey;
